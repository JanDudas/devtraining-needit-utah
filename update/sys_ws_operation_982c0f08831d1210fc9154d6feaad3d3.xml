<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v2)</name>
        <operation_script><![CDATA[//Modify the Script to return a custom error object if the user_name path parameter passed in by the user in the request, cannot be found in the sys_user table.

(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // The script will find the number of active NeedIt requests for the 
    // user passed in the path parameter. The response object will  
    // consist  of:

    // Count of active NeedIt records for user (number)
    // Count of active NeedIt records for the user by Request type (array of objects) 
    // Name and sys_id of user (object)  

    var requestUser = request.pathParams.user_name;

    var requestUserName = new GlideRecord('sys_user');
    requestUserName.get('user_name', requestUser);

    if (!requestUserName.user_name) {
        var myError = new sn_ws_err.ServiceError();
        myError.setStatus(542);
        myError.setMessage('Invalid value in path parameter');
        myError.setDetail('We recognized the path parameter you sent, but the value you requested does not exist in the database.');
        response.setError(myError);
        return;
    }

    var requestNIQuery = request.queryParams.ni_query;

    var userNeedItCount = new GlideAggregate('x_58872_needit_needit');
    userNeedItCount.addAggregate('COUNT');
    userNeedItCount.addQuery('u_requested_for', requestUserName.sys_id);

    userNeedItCount.addEncodedQuery(requestNIQuery);
    userNeedItCount.groupBy('u_request_type');

    userNeedItCount.query();

    var countNIRecords = 0;
    var arrayNIRecords = [];
    var countNIRecordGreat = 0;

    while (userNeedItCount.next()) {
        countNIRecords = parseInt(userNeedItCount.getAggregate('COUNT'));
        var requType = userNeedItCount.u_request_type.getDisplayValue();
        arrayNIRecords.push({
            "requestType": requType,
            "countRecords": countNIRecords
        });
        countNIRecordGreat += countNIRecords;
    }

    // Name and sys_id of user (object)  Sys ID (GUID)
    var body = {};
    body.lastNumNIRec = countNIRecords;
    body.totalUserNIRecs = countNIRecordGreat;
    body.catCounts = arrayNIRecords;
    body.user = { // z tabulky sys users 
        "User name": requestUserName.user_name,
        "User ID": requestUserName.sys_id
    };
    response.setBody(body);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-12 18:49:10</sys_created_on>
        <sys_id>982c0f08831d1210fc9154d6feaad3d3</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>ni_getinfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_982c0f08831d1210fc9154d6feaad3d3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-12 20:23:32</sys_updated_on>
        <web_service_definition display_value="NeedIt API">ced4374b83051210fc9154d6feaad317</web_service_definition>
        <web_service_version display_value="v2">1c2c0f08831d1210fc9154d6feaad3cf</web_service_version>
    </sys_ws_operation>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>982c0f08831d1210fc9154d6feaad3d3</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-12 19:56:38</sys_created_on>
        <sys_id>649b1b0883d15210fc9154d6feaad3ea</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-12 19:56:38</sys_updated_on>
        <table>sys_ws_operation</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
